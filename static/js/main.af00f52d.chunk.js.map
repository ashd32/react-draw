{"version":3,"sources":["Colors.js","components/Pixel.js","components/Canvas.js","components/ColorPicker.js","index.js"],"names":["Colors","Pixel","props","react_default","a","createElement","className","concat","background","current","onClick","Canvas","_useState","useState","Array","fill","map","_useState2","Object","slicedToArray","matrix","setMatrix","row","rowIndex","_","colIndex","key","e","newMatrix","JSON","parse","stringify","currentColor","changeColor","ColorPicker","color","index","setColor","rootElement","document","getElementById","ReactDOM","render","components_Canvas"],"mappings":"2IAAeA,QAAA,CAAC,QAAS,YAAa,OAAQ,aCE/BC,EAAA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAAC,OAAKL,EAAMM,WAAX,YAAAD,OACPL,EAAMO,QAAU,gBAAkB,IAEpCC,QAASR,EAAMQ,WC8BNC,EAlCA,SAAAT,GAAS,IAAAU,EACMC,mBAC1BC,MAAM,IACHC,OACAC,IAAI,kBACHF,MAAM,IACHC,OACAC,IAAI,kBAAM,OAPGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACfQ,EADeH,EAAA,GACPI,EADOJ,EAAA,GAiBtB,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UACbc,EAAOJ,IAAI,SAACM,EAAKC,GAAN,OACVD,EAAIN,IAAI,SAACQ,EAAGC,GACV,OACEtB,EAAAC,EAAAC,cAACJ,EAAD,CACEyB,IAAG,GAAAnB,OAAKgB,EAAL,KAAAhB,OAAiBkB,GACpBjB,WAAYR,EAAOoB,EAAOG,GAAUE,IACpCf,QAAS,SAAAiB,GAAC,OAdF,SAACJ,EAAUE,GAC7B,IAAMG,EAAYC,KAAKC,MAAMD,KAAKE,UAAUX,IAC5CQ,EAAUL,GAAUE,GAAYvB,EAAM8B,aACtCX,EAAUO,GAWcK,CAAYV,EAAUE,YCxBnCS,EAAA,SAAAhC,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZN,EAAOgB,IAAI,SAACmB,EAAOC,GAClB,OACEjC,EAAAC,EAAAC,cAACJ,EAAD,CACEyB,IAAKU,EACL5B,WAAY2B,EACZ1B,QAAST,EAAOE,EAAM8B,gBAAkBG,EACxCzB,QAAS,SAAAiB,GAAC,OAAIzB,EAAMmC,SAASD,UCIzC,IAAME,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOvC,EAAAC,EAAAC,cAZhB,WAAe,IAAAO,EACaC,mBAAS,GADtBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GACNuB,EADMlB,EAAA,GACCoB,EADDpB,EAAA,GAGb,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAD,CAAaF,aAAcG,EAAOE,SAAU,SAAAF,GAAK,OAAIE,EAASF,MAC9DhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQX,aAAcG,MAMZ,MAASG","file":"static/js/main.af00f52d.chunk.js","sourcesContent":["export default ['white', 'lightblue', 'blue', 'darkblue']\n","import React from 'react'\n\nexport default props => {\n  return (\n    <div\n      className={`${props.background} pixel  ${\n        props.current ? 'current-color' : ''\n      }`}\n      onClick={props.onClick}\n    />\n  )\n}\n","import React, { Component, useState } from 'react'\nimport Colors from '../Colors'\nimport Pixel from './Pixel'\n\nconst Canvas = props => {\n  const [matrix, setMatrix] = useState(\n    Array(30)\n      .fill()\n      .map(() =>\n        Array(30)\n          .fill()\n          .map(() => 0)\n      )\n  )\n\n  const changeColor = (rowIndex, colIndex) => {\n    const newMatrix = JSON.parse(JSON.stringify(matrix))\n    newMatrix[rowIndex][colIndex] = props.currentColor\n    setMatrix(newMatrix)\n  }\n\n  return (\n    <div className={'canvas'}>\n      {matrix.map((row, rowIndex) =>\n        row.map((_, colIndex) => {\n          return (\n            <Pixel\n              key={`${rowIndex}-${colIndex}`}\n              background={Colors[matrix[rowIndex][colIndex]]}\n              onClick={e => changeColor(rowIndex, colIndex)}\n            />\n          )\n        })\n      )}\n    </div>\n  )\n}\n\nexport default Canvas\n","import React from 'react'\nimport Pixel from './Pixel'\n\nimport Colors from '../Colors'\n\nexport default props => {\n  return (\n    <div className=\"colorpicker\">\n      {Colors.map((color, index) => {\n        return (\n          <Pixel\n            key={index}\n            background={color}\n            current={Colors[props.currentColor] === color}\n            onClick={e => props.setColor(index)}\n          />\n        )\n      })}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './styles.css'\nimport Canvas from './components/Canvas'\nimport ColorPicker from './components/ColorPicker'\n\nfunction App() {\n  const [color, setColor] = useState(0)\n\n  return (\n    <div className=\"App\">\n      <ColorPicker currentColor={color} setColor={color => setColor(color)} />\n      <Canvas currentColor={color} />\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}